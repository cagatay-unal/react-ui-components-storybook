{"version":3,"file":"main.3cd7d6278db34af07b96.hot-update.js","sources":["webpack:///./stories/unitary/Button/Button.jsx","webpack:///./stories/unitary/Button/Button.stories.mdx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nexport const Button = ({ router, text, status, outline }) => {\n    const classStatus =\n    status === 'success' ? 'btn-success' :\n    status === 'info' ? 'btn-info' :\n    status === 'alert' ? 'btn-alert' :\n    status === 'warning' ? 'btn-warning' : 'btn-default';\n\n    if (router) {\n        return (\n            <UIRouterButton href=\"#\" className={`btn ${classStatus} ${outline ? 'btn-outline' : ''}`}>{text}</UIRouterButton>\n        );\n    }\n\n    return(\n        <UIButton type=\"button\" className={`btn ${classStatus} ${outline ? 'btn-outline' : ''}`}>\n            {text}\n        </UIButton>\n    );\n};\n\nButton.propTypes = {\n    status: PropTypes.oneOf(['default', 'success', 'info', 'alert', 'warning']).isRequired,\n    text: PropTypes.string,\n    router: PropTypes.bool,\n    outline: PropTypes.bool\n}\n\nButton.defaultProps = {\n    status: 'default',\n    text: 'Button',\n    router: false,\n    outline: false\n}\n\nconst UIRouterButton = styled.a`\n    html body &.btn{\n        padding: 14px 24px;\n        border-radius: 6px;\n        border: 1px solid transparent;\n        font-size: 16px;\n        line-height: 20px;\n        color: white;\n        outline: none;\n        text-decoration: none;\n        cursor: pointer;\n\n        &-outline{ background-color: transparent !important; }\n\n        &-default{\n            background-color: var(--default);\n            color: var(--defaultTextColor);\n\n            &.btn-outline{\n                border-color: var(--default);\n            }\n        }\n        &-success{\n            background-color: var(--success);\n\n            &.btn-outline{\n                border-color: var(--success);\n                color: var(--success);\n            }\n        }\n        &-info{\n            background-color: var(--info);\n            \n            &.btn-outline{\n                border-color: var(--info);\n                color: var(--info);\n            }\n        }\n        &-alert{\n            background-color: var(--alert);\n\n            &.btn-outline{\n                border-color: var(--alert);\n                color: var(--alert);\n            }\n        }\n        &-warning{\n            background-color: var(--warning);\n\n            &.btn-outline{\n                border-color: var(--warning);\n                color: var(--warning);\n            }\n        }\n    }\n`;\nconst UIButton = styled.button`\n    html body &.btn{\n        padding: 14px 24px;\n        border-radius: 6px;\n        border: 1px solid transparent;\n        font-size: 16px;\n        line-height: 20px;\n        color: white;\n        outline: none;\n        cursor: pointer;\n\n        &-outline{ background-color: transparent !important; }\n\n        &-default{\n            background-color: var(--default);\n            color: var(--defaultTextColor);\n\n            &.btn-outline{\n                border-color: var(--default);\n            }\n        }\n        &-success{\n            background-color: var(--success);\n\n            &.btn-outline{\n                border-color: var(--success);\n                color: var(--success);\n            }\n        }\n        &-info{\n            background-color: var(--info);\n            \n            &.btn-outline{\n                border-color: var(--info);\n                color: var(--info);\n            }\n        }\n        &-alert{\n            background-color: var(--alert);\n\n            &.btn-outline{\n                border-color: var(--alert);\n                color: var(--alert);\n            }\n        }\n        &-warning{\n            background-color: var(--warning);\n\n            &.btn-outline{\n                border-color: var(--warning);\n                color: var(--warning);\n            }\n        }\n    }\n`;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Canvas, Meta, Story, ArgsTable} from '@storybook/addon-docs';\nimport { Button } from './Button';\nexport const Template = args => <Button {...args} mdxType=\"Button\" />;\n\nconst layoutProps = {\n  Template\n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Components/UI Elements/Button\" component={Button} mdxType=\"Meta\" />\n\n    <div class=\"section-title\">\n    <h4>button element</h4>\n    <p class=\"description\">The development process of this <span className=\"badge badge-success\">UI Element / Button</span> component is ongoing.</p>\n    </div>\n    <Canvas mdxType=\"Canvas\">\n    <Story name=\"Default Button\" args={{\n        status: 'default',\n        text: 'Button',\n        router: false,\n        outline: false\n      }} mdxType=\"Story\">\n        {Template.bind({})}\n    </Story>\n    </Canvas>\n    <Canvas mdxType=\"Canvas\">\n    <Story name=\"Primary Button\" args={{\n        status: 'default',\n        text: 'Button',\n        router: false,\n        outline: false\n      }} mdxType=\"Story\">\n        {Template.bind({})}\n    </Story>\n    <Story name=\"Outline Button\" args={{\n        status: 'default',\n        text: 'Button',\n        router: false,\n        outline: true\n      }} mdxType=\"Story\">\n        {Template.bind({})}\n    </Story>\n    </Canvas>\n    <Canvas mdxSource=\"%0A%3CArgsTable%20story=%22Default%20Button%22%20/%3E%0A\" mdxType=\"Canvas\">\n    <ArgsTable story=\"Default Button\" mdxType=\"ArgsTable\" />\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const defaultButton = Template.bind({});\ndefaultButton.storyName = 'Default Button';\ndefaultButton.args = {\n  status: 'default',\n  text: 'Button',\n  router: false,\n  outline: false\n};\ndefaultButton.parameters = { storySource: { source: 'args => <Button {...args} />' } };\n\nexport const primaryButton = Template.bind({});\nprimaryButton.storyName = 'Primary Button';\nprimaryButton.args = {\n  status: 'default',\n  text: 'Button',\n  router: false,\n  outline: false\n};\nprimaryButton.parameters = { storySource: { source: 'args => <Button {...args} />' } };\n\nexport const outlineButton = Template.bind({});\noutlineButton.storyName = 'Outline Button';\noutlineButton.args = {\n  status: 'default',\n  text: 'Button',\n  router: false,\n  outline: true\n};\noutlineButton.parameters = { storySource: { source: 'args => <Button {...args} />' } };\n\nconst componentMeta = { title: 'Components/UI Elements/Button', component: Button, includeStories: [\"defaultButton\",\"primaryButton\",\"outlineButton\"],  };\n\nconst mdxStoryNameToKey = {\"Default Button\":\"defaultButton\",\"Primary Button\":\"primaryButton\",\"Outline Button\":\"outlineButton\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentMeta={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;AAlBA;AAoBA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAwDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7FA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAGA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AALA;AASA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AALA;AAQA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAKA;AALA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AA7CA;AA8CA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;A","sourceRoot":""}